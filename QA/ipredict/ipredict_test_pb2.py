# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ipredict-test.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import field_behavior_pb2 as google_dot_api_dot_field__behavior__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13ipredict-test.proto\x12\x1a\x63\x61zelabs.costsense.apis.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\'\n\x0bTestRequest\x12\x18\n\x07subject\x18\x01 \x01(\tR\x07subject\".\n\x0cTestResponse\x12\x1e\n\ntestStatus\x18\x01 \x01(\x08R\ntestStatus\"Z\n\x0cTableRequest\x12\x18\n\x07\x61\x64\x64ress\x18\x01 \x01(\tR\x07\x61\x64\x64ress\x12\x12\n\x04port\x18\x02 \x01(\tR\x04port\x12\x1c\n\ttablename\x18\x03 \x01(\tR\ttablename\"\'\n\rTableResponse\x12\x16\n\x06tables\x18\x01 \x03(\tR\x06tables\"\xc2\x04\n\x0b\x61\x63\x63uracyReq\x12\x18\n\x07subject\x18\x01 \x01(\tR\x07subject\x12\x1b\n\x06growth\x18\x02 \x01(\tH\x00R\x06growth\x88\x01\x01\x12-\n\x0fseasonalityMode\x18\x03 \x01(\tH\x01R\x0fseasonalityMode\x88\x01\x01\x12\x39\n\x15\x63hangepointPriorScale\x18\x04 \x01(\x01H\x02R\x15\x63hangepointPriorScale\x88\x01\x01\x12\x33\n\x12holidaysPriorScale\x18\x05 \x01(\x01H\x03R\x12holidaysPriorScale\x88\x01\x01\x12)\n\rintervalWidth\x18\x06 \x01(\x01H\x04R\rintervalWidth\x88\x01\x01\x12\x39\n\x15seasonalityPriorScale\x18\x07 \x01(\x05H\x05R\x15seasonalityPriorScale\x88\x01\x01\x12/\n\x10\x64\x61ilySeasonality\x18\x08 \x01(\x08H\x06R\x10\x64\x61ilySeasonality\x88\x01\x01\x12%\n\x0bmcmcSamples\x18\t \x01(\x05H\x07R\x0bmcmcSamples\x88\x01\x01\x42\t\n\x07_growthB\x12\n\x10_seasonalityModeB\x18\n\x16_changepointPriorScaleB\x15\n\x13_holidaysPriorScaleB\x10\n\x0e_intervalWidthB\x18\n\x16_seasonalityPriorScaleB\x13\n\x11_dailySeasonalityB\x0e\n\x0c_mcmcSamples\"\xc8\x01\n\x10\x61\x63\x63uracyResponse\x12\x1a\n\x08trainMAE\x18\x01 \x01(\x01R\x08trainMAE\x12\x1a\n\x08trainMSE\x18\x02 \x01(\x01R\x08trainMSE\x12$\n\rtrainAccuracy\x18\x03 \x01(\x01R\rtrainAccuracy\x12\x18\n\x07testMAE\x18\x04 \x01(\x01R\x07testMAE\x12\x18\n\x07testMSE\x18\x05 \x01(\x01R\x07testMSE\x12\"\n\x0ctestAccuracy\x18\x06 \x01(\x01R\x0ctestAccuracy2\xe2\x02\n\x18\x43ostSenseIPredictTesting\x12k\n\x14Hyperparametertuning\x12\'.cazelabs.costsense.apis.v1.TestRequest\x1a(.cazelabs.costsense.apis.v1.TestResponse\"\x00\x12j\n\x11Readingtablenames\x12(.cazelabs.costsense.apis.v1.TableRequest\x1a).cazelabs.costsense.apis.v1.TableResponse\"\x00\x12m\n\x12trainingvalidation\x12\'.cazelabs.costsense.apis.v1.accuracyReq\x1a,.cazelabs.costsense.apis.v1.accuracyResponse\"\x00\x42\xba\x01Z)github.com/cazelabs/cost-sense/libs/go;v1\x92\x41\x8b\x01\x12s\n\x0f\x43ost Sense APIs\"Y\n\x12\x43ost Sense Project\x12&https://github.com/cazelabs/cost-sense\x1a\x1bteam.costsense@cazelabs.com2\x05\x31.0.0*\x02\x01\x02\x32\x10\x61pplication/jsonb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'ipredict_test_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z)github.com/cazelabs/cost-sense/libs/go;v1\222A\213\001\022s\n\017Cost Sense APIs\"Y\n\022Cost Sense Project\022&https://github.com/cazelabs/cost-sense\032\033team.costsense@cazelabs.com2\0051.0.0*\002\001\0022\020application/json'
  _TESTREQUEST._serialized_start=254
  _TESTREQUEST._serialized_end=293
  _TESTRESPONSE._serialized_start=295
  _TESTRESPONSE._serialized_end=341
  _TABLEREQUEST._serialized_start=343
  _TABLEREQUEST._serialized_end=433
  _TABLERESPONSE._serialized_start=435
  _TABLERESPONSE._serialized_end=474
  _ACCURACYREQ._serialized_start=477
  _ACCURACYREQ._serialized_end=1055
  _ACCURACYRESPONSE._serialized_start=1058
  _ACCURACYRESPONSE._serialized_end=1258
  _COSTSENSEIPREDICTTESTING._serialized_start=1261
  _COSTSENSEIPREDICTTESTING._serialized_end=1615
# @@protoc_insertion_point(module_scope)
