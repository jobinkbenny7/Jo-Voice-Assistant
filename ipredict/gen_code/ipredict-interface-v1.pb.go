// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: ipredict/gen_code/ipredict-interface-v1.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TraningData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp float64 `protobuf:"fixed64,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value     float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TraningData) Reset() {
	*x = TraningData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraningData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraningData) ProtoMessage() {}

func (x *TraningData) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraningData.ProtoReflect.Descriptor instead.
func (*TraningData) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{0}
}

func (x *TraningData) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TraningData) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type TraningMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string  `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Window  *int32  `protobuf:"varint,2,opt,name=window,proto3,oneof" json:"window,omitempty"`
	Unit    *string `protobuf:"bytes,3,opt,name=unit,proto3,oneof" json:"unit,omitempty"`
}

func (x *TraningMetadata) Reset() {
	*x = TraningMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraningMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraningMetadata) ProtoMessage() {}

func (x *TraningMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraningMetadata.ProtoReflect.Descriptor instead.
func (*TraningMetadata) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{1}
}

func (x *TraningMetadata) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TraningMetadata) GetWindow() int32 {
	if x != nil && x.Window != nil {
		return *x.Window
	}
	return 0
}

func (x *TraningMetadata) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

type PushMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta *TraningMetadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Data []*TraningData   `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PushMetricsRequest) Reset() {
	*x = PushMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMetricsRequest) ProtoMessage() {}

func (x *PushMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMetricsRequest.ProtoReflect.Descriptor instead.
func (*PushMetricsRequest) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{2}
}

func (x *PushMetricsRequest) GetMeta() *TraningMetadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *PushMetricsRequest) GetData() []*TraningData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{3}
}

func (x *StatusRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type DeleteTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *DeleteTableRequest) Reset() {
	*x = DeleteTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableRequest) ProtoMessage() {}

func (x *DeleteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteTableRequest) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteTableRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelExist              bool  `protobuf:"varint,1,opt,name=modelExist,proto3" json:"modelExist,omitempty"`
	ModelStartTimestamp     int64 `protobuf:"varint,2,opt,name=modelStartTimestamp,proto3" json:"modelStartTimestamp,omitempty"`
	ModelEndTimestamp       int64 `protobuf:"varint,3,opt,name=modelEndTimestamp,proto3" json:"modelEndTimestamp,omitempty"`
	InputDataStartTimestamp int64 `protobuf:"varint,4,opt,name=inputDataStartTimestamp,proto3" json:"inputDataStartTimestamp,omitempty"`
	InputDataEndTimestamp   int64 `protobuf:"varint,5,opt,name=inputDataEndTimestamp,proto3" json:"inputDataEndTimestamp,omitempty"`
	BudgetCalculated        bool  `protobuf:"varint,6,opt,name=budgetCalculated,proto3" json:"budgetCalculated,omitempty"`
	Modeltimediff           int64 `protobuf:"varint,7,opt,name=modeltimediff,proto3" json:"modeltimediff,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{5}
}

func (x *StatusResponse) GetModelExist() bool {
	if x != nil {
		return x.ModelExist
	}
	return false
}

func (x *StatusResponse) GetModelStartTimestamp() int64 {
	if x != nil {
		return x.ModelStartTimestamp
	}
	return 0
}

func (x *StatusResponse) GetModelEndTimestamp() int64 {
	if x != nil {
		return x.ModelEndTimestamp
	}
	return 0
}

func (x *StatusResponse) GetInputDataStartTimestamp() int64 {
	if x != nil {
		return x.InputDataStartTimestamp
	}
	return 0
}

func (x *StatusResponse) GetInputDataEndTimestamp() int64 {
	if x != nil {
		return x.InputDataEndTimestamp
	}
	return 0
}

func (x *StatusResponse) GetBudgetCalculated() bool {
	if x != nil {
		return x.BudgetCalculated
	}
	return false
}

func (x *StatusResponse) GetModeltimediff() int64 {
	if x != nil {
		return x.Modeltimediff
	}
	return 0
}

type TrendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject        string  `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Seasonality    string  `protobuf:"bytes,2,opt,name=seasonality,proto3" json:"seasonality,omitempty"`
	StartTimestamp *int64  `protobuf:"varint,3,opt,name=startTimestamp,proto3,oneof" json:"startTimestamp,omitempty"`
	EndTimestamp   *int64  `protobuf:"varint,4,opt,name=endTimestamp,proto3,oneof" json:"endTimestamp,omitempty"`
	Unit           *string `protobuf:"bytes,5,opt,name=unit,proto3,oneof" json:"unit,omitempty"`
	Window         *int32  `protobuf:"varint,6,opt,name=window,proto3,oneof" json:"window,omitempty"`
	Timezone       *string `protobuf:"bytes,7,opt,name=timezone,proto3,oneof" json:"timezone,omitempty"`
}

func (x *TrendReq) Reset() {
	*x = TrendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendReq) ProtoMessage() {}

func (x *TrendReq) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendReq.ProtoReflect.Descriptor instead.
func (*TrendReq) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{6}
}

func (x *TrendReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *TrendReq) GetSeasonality() string {
	if x != nil {
		return x.Seasonality
	}
	return ""
}

func (x *TrendReq) GetStartTimestamp() int64 {
	if x != nil && x.StartTimestamp != nil {
		return *x.StartTimestamp
	}
	return 0
}

func (x *TrendReq) GetEndTimestamp() int64 {
	if x != nil && x.EndTimestamp != nil {
		return *x.EndTimestamp
	}
	return 0
}

func (x *TrendReq) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

func (x *TrendReq) GetWindow() int32 {
	if x != nil && x.Window != nil {
		return *x.Window
	}
	return 0
}

func (x *TrendReq) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

type AnomalyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject        string  `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	StartTimestamp int64   `protobuf:"varint,2,opt,name=startTimestamp,proto3" json:"startTimestamp,omitempty"`
	EndTimestamp   int64   `protobuf:"varint,3,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
	Filter         *string `protobuf:"bytes,4,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	Unit           *string `protobuf:"bytes,5,opt,name=unit,proto3,oneof" json:"unit,omitempty"`
	Window         *int32  `protobuf:"varint,6,opt,name=window,proto3,oneof" json:"window,omitempty"`
	Timezone       *string `protobuf:"bytes,7,opt,name=timezone,proto3,oneof" json:"timezone,omitempty"`
}

func (x *AnomalyReq) Reset() {
	*x = AnomalyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnomalyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyReq) ProtoMessage() {}

func (x *AnomalyReq) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyReq.ProtoReflect.Descriptor instead.
func (*AnomalyReq) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{7}
}

func (x *AnomalyReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *AnomalyReq) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *AnomalyReq) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *AnomalyReq) GetFilter() string {
	if x != nil && x.Filter != nil {
		return *x.Filter
	}
	return ""
}

func (x *AnomalyReq) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

func (x *AnomalyReq) GetWindow() int32 {
	if x != nil && x.Window != nil {
		return *x.Window
	}
	return 0
}

func (x *AnomalyReq) GetTimezone() string {
	if x != nil && x.Timezone != nil {
		return *x.Timezone
	}
	return ""
}

type AnomalyReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject        string  `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	StartTimestamp int64   `protobuf:"varint,2,opt,name=startTimestamp,proto3" json:"startTimestamp,omitempty"`
	EndTimestamp   int64   `protobuf:"varint,3,opt,name=endTimestamp,proto3" json:"endTimestamp,omitempty"`
	Unit           *string `protobuf:"bytes,4,opt,name=unit,proto3,oneof" json:"unit,omitempty"`
	Window         *int32  `protobuf:"varint,5,opt,name=window,proto3,oneof" json:"window,omitempty"`
}

func (x *AnomalyReportReq) Reset() {
	*x = AnomalyReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnomalyReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyReportReq) ProtoMessage() {}

func (x *AnomalyReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyReportReq.ProtoReflect.Descriptor instead.
func (*AnomalyReportReq) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{8}
}

func (x *AnomalyReportReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *AnomalyReportReq) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *AnomalyReportReq) GetEndTimestamp() int64 {
	if x != nil {
		return x.EndTimestamp
	}
	return 0
}

func (x *AnomalyReportReq) GetUnit() string {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return ""
}

func (x *AnomalyReportReq) GetWindow() int32 {
	if x != nil && x.Window != nil {
		return *x.Window
	}
	return 0
}

type AnomalyReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxTimestamp      uint64  `protobuf:"varint,1,opt,name=max_timestamp,json=maxTimestamp,proto3" json:"max_timestamp,omitempty"`
	NumAnomalies      uint64  `protobuf:"varint,2,opt,name=num_anomalies,json=numAnomalies,proto3" json:"num_anomalies,omitempty"`
	AnomalyPercentage float64 `protobuf:"fixed64,3,opt,name=Anomaly_percentage,json=AnomalyPercentage,proto3" json:"Anomaly_percentage,omitempty"`
}

func (x *AnomalyReport) Reset() {
	*x = AnomalyReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnomalyReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyReport) ProtoMessage() {}

func (x *AnomalyReport) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyReport.ProtoReflect.Descriptor instead.
func (*AnomalyReport) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{9}
}

func (x *AnomalyReport) GetMaxTimestamp() uint64 {
	if x != nil {
		return x.MaxTimestamp
	}
	return 0
}

func (x *AnomalyReport) GetNumAnomalies() uint64 {
	if x != nil {
		return x.NumAnomalies
	}
	return 0
}

func (x *AnomalyReport) GetAnomalyPercentage() float64 {
	if x != nil {
		return x.AnomalyPercentage
	}
	return 0
}

type AnomalyReportRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AnomalyReport `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AnomalyReportRes) Reset() {
	*x = AnomalyReportRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnomalyReportRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyReportRes) ProtoMessage() {}

func (x *AnomalyReportRes) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyReportRes.ProtoReflect.Descriptor instead.
func (*AnomalyReportRes) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{10}
}

func (x *AnomalyReportRes) GetData() []*AnomalyReport {
	if x != nil {
		return x.Data
	}
	return nil
}

type Anomaly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime    int64   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Expected     float64 `protobuf:"fixed64,3,opt,name=expected,proto3" json:"expected,omitempty"`
	ExpectedMax  float64 `protobuf:"fixed64,4,opt,name=expectedMax,proto3" json:"expectedMax,omitempty"`
	ExpectedMin  float64 `protobuf:"fixed64,5,opt,name=expectedMin,proto3" json:"expectedMin,omitempty"`
	CurrentValue float64 `protobuf:"fixed64,6,opt,name=currentValue,proto3" json:"currentValue,omitempty"`
	Deviation    float64 `protobuf:"fixed64,7,opt,name=deviation,proto3" json:"deviation,omitempty"`
	IsAnomaly    bool    `protobuf:"varint,8,opt,name=isAnomaly,proto3" json:"isAnomaly,omitempty"`
}

func (x *Anomaly) Reset() {
	*x = Anomaly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Anomaly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Anomaly) ProtoMessage() {}

func (x *Anomaly) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Anomaly.ProtoReflect.Descriptor instead.
func (*Anomaly) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{11}
}

func (x *Anomaly) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Anomaly) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Anomaly) GetExpected() float64 {
	if x != nil {
		return x.Expected
	}
	return 0
}

func (x *Anomaly) GetExpectedMax() float64 {
	if x != nil {
		return x.ExpectedMax
	}
	return 0
}

func (x *Anomaly) GetExpectedMin() float64 {
	if x != nil {
		return x.ExpectedMin
	}
	return 0
}

func (x *Anomaly) GetCurrentValue() float64 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *Anomaly) GetDeviation() float64 {
	if x != nil {
		return x.Deviation
	}
	return 0
}

func (x *Anomaly) GetIsAnomaly() bool {
	if x != nil {
		return x.IsAnomaly
	}
	return false
}

type AnomalyRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Anomaly `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AnomalyRes) Reset() {
	*x = AnomalyRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnomalyRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnomalyRes) ProtoMessage() {}

func (x *AnomalyRes) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnomalyRes.ProtoReflect.Descriptor instead.
func (*AnomalyRes) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{12}
}

func (x *AnomalyRes) GetData() []*Anomaly {
	if x != nil {
		return x.Data
	}
	return nil
}

type TrendData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime    int64   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`
	TrendValue   float64 `protobuf:"fixed64,3,opt,name=trendValue,proto3" json:"trendValue,omitempty"`
	TrendLower   float64 `protobuf:"fixed64,4,opt,name=trendLower,proto3" json:"trendLower,omitempty"`
	TrendUpper   float64 `protobuf:"fixed64,5,opt,name=trendUpper,proto3" json:"trendUpper,omitempty"`
	CurrentValue float64 `protobuf:"fixed64,6,opt,name=currentValue,proto3" json:"currentValue,omitempty"`
}

func (x *TrendData) Reset() {
	*x = TrendData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendData) ProtoMessage() {}

func (x *TrendData) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendData.ProtoReflect.Descriptor instead.
func (*TrendData) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{13}
}

func (x *TrendData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TrendData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TrendData) GetTrendValue() float64 {
	if x != nil {
		return x.TrendValue
	}
	return 0
}

func (x *TrendData) GetTrendLower() float64 {
	if x != nil {
		return x.TrendLower
	}
	return 0
}

func (x *TrendData) GetTrendUpper() float64 {
	if x != nil {
		return x.TrendUpper
	}
	return 0
}

func (x *TrendData) GetCurrentValue() float64 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

type TrendRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*TrendData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *TrendRes) Reset() {
	*x = TrendRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrendRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendRes) ProtoMessage() {}

func (x *TrendRes) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendRes.ProtoReflect.Descriptor instead.
func (*TrendRes) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{14}
}

func (x *TrendRes) GetData() []*TrendData {
	if x != nil {
		return x.Data
	}
	return nil
}

type BudgetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *BudgetReq) Reset() {
	*x = BudgetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetReq) ProtoMessage() {}

func (x *BudgetReq) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetReq.ProtoReflect.Descriptor instead.
func (*BudgetReq) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{15}
}

func (x *BudgetReq) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type Budget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateTime    int64   `protobuf:"varint,1,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Expected    float64 `protobuf:"fixed64,2,opt,name=expected,proto3" json:"expected,omitempty"`
	ExpectedMax float64 `protobuf:"fixed64,3,opt,name=expectedMax,proto3" json:"expectedMax,omitempty"`
	ExpectedMin float64 `protobuf:"fixed64,4,opt,name=expectedMin,proto3" json:"expectedMin,omitempty"`
	Qhy         string  `protobuf:"bytes,5,opt,name=qhy,proto3" json:"qhy,omitempty"`
	Year        int32   `protobuf:"varint,6,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *Budget) Reset() {
	*x = Budget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Budget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Budget) ProtoMessage() {}

func (x *Budget) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Budget.ProtoReflect.Descriptor instead.
func (*Budget) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{16}
}

func (x *Budget) GetDateTime() int64 {
	if x != nil {
		return x.DateTime
	}
	return 0
}

func (x *Budget) GetExpected() float64 {
	if x != nil {
		return x.Expected
	}
	return 0
}

func (x *Budget) GetExpectedMax() float64 {
	if x != nil {
		return x.ExpectedMax
	}
	return 0
}

func (x *Budget) GetExpectedMin() float64 {
	if x != nil {
		return x.ExpectedMin
	}
	return 0
}

func (x *Budget) GetQhy() string {
	if x != nil {
		return x.Qhy
	}
	return ""
}

func (x *Budget) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type BudgetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Budget `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *BudgetRes) Reset() {
	*x = BudgetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BudgetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BudgetRes) ProtoMessage() {}

func (x *BudgetRes) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BudgetRes.ProtoReflect.Descriptor instead.
func (*BudgetRes) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{17}
}

func (x *BudgetRes) GetData() []*Budget {
	if x != nil {
		return x.Data
	}
	return nil
}

type NewBudgetReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parentsubject    string `protobuf:"bytes,1,opt,name=parentsubject,proto3" json:"parentsubject,omitempty"`
	Effectingsubject string `protobuf:"bytes,2,opt,name=effectingsubject,proto3" json:"effectingsubject,omitempty"`
}

func (x *NewBudgetReq) Reset() {
	*x = NewBudgetReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBudgetReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBudgetReq) ProtoMessage() {}

func (x *NewBudgetReq) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBudgetReq.ProtoReflect.Descriptor instead.
func (*NewBudgetReq) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{18}
}

func (x *NewBudgetReq) GetParentsubject() string {
	if x != nil {
		return x.Parentsubject
	}
	return ""
}

func (x *NewBudgetReq) GetEffectingsubject() string {
	if x != nil {
		return x.Effectingsubject
	}
	return ""
}

type NewBudget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateTime    int64   `protobuf:"varint,1,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Expected    float64 `protobuf:"fixed64,2,opt,name=expected,proto3" json:"expected,omitempty"`
	ExpectedMax float64 `protobuf:"fixed64,3,opt,name=expectedMax,proto3" json:"expectedMax,omitempty"`
	ExpectedMin float64 `protobuf:"fixed64,4,opt,name=expectedMin,proto3" json:"expectedMin,omitempty"`
	Qhy         string  `protobuf:"bytes,5,opt,name=qhy,proto3" json:"qhy,omitempty"`
	Year        int32   `protobuf:"varint,6,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *NewBudget) Reset() {
	*x = NewBudget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBudget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBudget) ProtoMessage() {}

func (x *NewBudget) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBudget.ProtoReflect.Descriptor instead.
func (*NewBudget) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{19}
}

func (x *NewBudget) GetDateTime() int64 {
	if x != nil {
		return x.DateTime
	}
	return 0
}

func (x *NewBudget) GetExpected() float64 {
	if x != nil {
		return x.Expected
	}
	return 0
}

func (x *NewBudget) GetExpectedMax() float64 {
	if x != nil {
		return x.ExpectedMax
	}
	return 0
}

func (x *NewBudget) GetExpectedMin() float64 {
	if x != nil {
		return x.ExpectedMin
	}
	return 0
}

func (x *NewBudget) GetQhy() string {
	if x != nil {
		return x.Qhy
	}
	return ""
}

func (x *NewBudget) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type NewBudgetRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*NewBudget `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *NewBudgetRes) Reset() {
	*x = NewBudgetRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewBudgetRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewBudgetRes) ProtoMessage() {}

func (x *NewBudgetRes) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewBudgetRes.ProtoReflect.Descriptor instead.
func (*NewBudgetRes) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{20}
}

func (x *NewBudgetRes) GetData() []*NewBudget {
	if x != nil {
		return x.Data
	}
	return nil
}

type NewPriceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parentsubject string  `protobuf:"bytes,1,opt,name=parentsubject,proto3" json:"parentsubject,omitempty"`
	Month         int32   `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Year          int32   `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	Value         float64 `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	ChangedValue  float64 `protobuf:"fixed64,5,opt,name=changedValue,proto3" json:"changedValue,omitempty"`
}

func (x *NewPriceReq) Reset() {
	*x = NewPriceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewPriceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPriceReq) ProtoMessage() {}

func (x *NewPriceReq) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPriceReq.ProtoReflect.Descriptor instead.
func (*NewPriceReq) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{21}
}

func (x *NewPriceReq) GetParentsubject() string {
	if x != nil {
		return x.Parentsubject
	}
	return ""
}

func (x *NewPriceReq) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *NewPriceReq) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *NewPriceReq) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *NewPriceReq) GetChangedValue() float64 {
	if x != nil {
		return x.ChangedValue
	}
	return 0
}

type NewPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateTime    int64   `protobuf:"varint,1,opt,name=dateTime,proto3" json:"dateTime,omitempty"`
	Expected    float64 `protobuf:"fixed64,2,opt,name=expected,proto3" json:"expected,omitempty"`
	ExpectedMax float64 `protobuf:"fixed64,3,opt,name=expectedMax,proto3" json:"expectedMax,omitempty"`
	ExpectedMin float64 `protobuf:"fixed64,4,opt,name=expectedMin,proto3" json:"expectedMin,omitempty"`
	Qhy         string  `protobuf:"bytes,5,opt,name=qhy,proto3" json:"qhy,omitempty"`
	Year        int32   `protobuf:"varint,6,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *NewPrice) Reset() {
	*x = NewPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPrice) ProtoMessage() {}

func (x *NewPrice) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPrice.ProtoReflect.Descriptor instead.
func (*NewPrice) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{22}
}

func (x *NewPrice) GetDateTime() int64 {
	if x != nil {
		return x.DateTime
	}
	return 0
}

func (x *NewPrice) GetExpected() float64 {
	if x != nil {
		return x.Expected
	}
	return 0
}

func (x *NewPrice) GetExpectedMax() float64 {
	if x != nil {
		return x.ExpectedMax
	}
	return 0
}

func (x *NewPrice) GetExpectedMin() float64 {
	if x != nil {
		return x.ExpectedMin
	}
	return 0
}

func (x *NewPrice) GetQhy() string {
	if x != nil {
		return x.Qhy
	}
	return ""
}

func (x *NewPrice) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type NewPriceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*NewPrice `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *NewPriceRes) Reset() {
	*x = NewPriceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewPriceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPriceRes) ProtoMessage() {}

func (x *NewPriceRes) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPriceRes.ProtoReflect.Descriptor instead.
func (*NewPriceRes) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP(), []int{23}
}

func (x *NewPriceRes) GetData() []*NewPrice {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_ipredict_gen_code_ipredict_interface_v1_proto protoreflect.FileDescriptor

var file_ipredict_gen_code_ipredict_interface_v1_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x69, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x2f, 0x69, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x2d, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2d, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1a, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65,
	0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x06,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x53, 0x92, 0x41, 0x4d, 0x32, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4a, 0x03,
	0x44, 0x61, 0x79, 0xf2, 0x02, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0xf2, 0x02, 0x05, 0x4d, 0x6f,
	0x6e, 0x74, 0x68, 0xf2, 0x02, 0x04, 0x57, 0x65, 0x65, 0x6b, 0xf2, 0x02, 0x03, 0x44, 0x61, 0x79,
	0xf2, 0x02, 0x04, 0x48, 0x6f, 0x75, 0x72, 0xf2, 0x02, 0x06, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0xf2, 0x02, 0x06, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x12,
	0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74,
	0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x29, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xd2, 0x02, 0x0a, 0x0e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x13, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x38,
	0x0a, 0x17, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x17, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a,
	0x0a, 0x10, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x69, 0x66, 0x66,
	0x22, 0x85, 0x05, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x71, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x57,
	0x92, 0x41, 0x51, 0x32, 0x1f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6e, 0x61, 0x6d,
	0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x20, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x4a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x3d, 0x64, 0x65,
	0x76, 0x3b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x3d, 0x6b, 0x75, 0x62, 0x65,
	0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x3d, 0x43, 0x50, 0x55, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x68, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x46, 0x92, 0x41, 0x40, 0x32, 0x16, 0x54, 0x72, 0x65, 0x6e,
	0x64, 0x20, 0x73, 0x65, 0x73, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x20, 0x74, 0x79,
	0x70, 0x65, 0x3a, 0x05, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x4a, 0x06, 0x77, 0x65, 0x65, 0x6b, 0x6c,
	0x79, 0xf2, 0x02, 0x05, 0x64, 0x61, 0x69, 0x6c, 0x79, 0xf2, 0x02, 0x06, 0x77, 0x65, 0x65, 0x6b,
	0x6c, 0x79, 0xf2, 0x02, 0x05, 0x74, 0x72, 0x65, 0x6e, 0x64, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0c,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x53, 0x92, 0x41, 0x4d, 0x32, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4a,
	0x03, 0x44, 0x61, 0x79, 0xf2, 0x02, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0xf2, 0x02, 0x05, 0x4d,
	0x6f, 0x6e, 0x74, 0x68, 0xf2, 0x02, 0x04, 0x57, 0x65, 0x65, 0x6b, 0xf2, 0x02, 0x03, 0x44, 0x61,
	0x79, 0xf2, 0x02, 0x04, 0x48, 0x6f, 0x75, 0x72, 0xf2, 0x02, 0x06, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0xf2, 0x02, 0x06, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0xe0, 0x41, 0x01, 0x48, 0x02, 0x52,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52,
	0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x46, 0x92, 0x41,
	0x40, 0x32, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x7a, 0x6f,
	0x6e, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x28, 0x65, 0x2e, 0x67, 0x2e, 0x20,
	0x2b, 0x30, 0x35, 0x3a, 0x33, 0x30, 0x20, 0x6f, 0x72, 0x20, 0x2d, 0x30, 0x38, 0x3a, 0x30, 0x30,
	0x29, 0x3a, 0x06, 0x2b, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x4a, 0x06, 0x2b, 0x30, 0x35, 0x3a, 0x33,
	0x30, 0xe0, 0x41, 0x01, 0x48, 0x04, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xd6, 0x04, 0x0a, 0x0a, 0x41, 0x6e, 0x6f,
	0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x73, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x59, 0x92, 0x41, 0x53, 0x32, 0x21, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x20, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x4a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x3d, 0x64, 0x65, 0x76, 0x3b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x3d, 0x6b, 0x75, 0x62, 0x65, 0x2d, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3d, 0x43, 0x50, 0x55,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0c, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x03, 0xe0, 0x41, 0x01, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x58, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x3b, 0x92, 0x41, 0x35, 0x32, 0x0c, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79,
	0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x03, 0x41, 0x6c, 0x6c, 0x4a, 0x07, 0x41, 0x6e, 0x6f, 0x6d,
	0x61, 0x6c, 0x79, 0xf2, 0x02, 0x03, 0x41, 0x6c, 0x6c, 0xf2, 0x02, 0x07, 0x41, 0x6e, 0x6f, 0x6d,
	0x61, 0x6c, 0x79, 0xf2, 0x02, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0xe0, 0x41, 0x01, 0x48,
	0x00, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x6c, 0x0a, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x53, 0x92, 0x41, 0x4d, 0x32,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x05, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x4a, 0x03, 0x44, 0x61, 0x79, 0xf2, 0x02, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0xf2, 0x02,
	0x05, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0xf2, 0x02, 0x04, 0x57, 0x65, 0x65, 0x6b, 0xf2, 0x02, 0x03,
	0x44, 0x61, 0x79, 0xf2, 0x02, 0x04, 0x48, 0x6f, 0x75, 0x72, 0xf2, 0x02, 0x06, 0x4d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0xf2, 0x02, 0x06, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0xe0, 0x41, 0x01, 0x48,
	0x01, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x06, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x48,
	0x02, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x46,
	0x92, 0x41, 0x40, 0x32, 0x2e, 0x46, 0x69, 0x78, 0x65, 0x64, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20,
	0x7a, 0x6f, 0x6e, 0x65, 0x20, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x20, 0x28, 0x65, 0x2e, 0x67,
	0x2e, 0x20, 0x2b, 0x30, 0x35, 0x3a, 0x33, 0x30, 0x20, 0x6f, 0x72, 0x20, 0x2d, 0x30, 0x38, 0x3a,
	0x30, 0x30, 0x29, 0x3a, 0x06, 0x2b, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x4a, 0x06, 0x2b, 0x30, 0x35,
	0x3a, 0x33, 0x30, 0xe0, 0x41, 0x01, 0x48, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f,
	0x6e, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x22, 0x80, 0x03, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x73, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x59, 0x92, 0x41, 0x53, 0x32, 0x21, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61,
	0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x20, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x4a,
	0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x3d, 0x64, 0x65, 0x76, 0x3b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x3d, 0x6b, 0x75, 0x62, 0x65, 0x2d, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3d, 0x43, 0x50, 0x55, 0xe0,
	0x41, 0x02, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x0e, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x6b, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x52, 0x92, 0x41, 0x4c, 0x32, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3a,
	0x04, 0x48, 0x6f, 0x75, 0x72, 0x4a, 0x03, 0x44, 0x61, 0x79, 0xf2, 0x02, 0x05, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0xf2, 0x02, 0x05, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0xf2, 0x02, 0x04, 0x57, 0x65, 0x65,
	0x6b, 0xf2, 0x02, 0x03, 0x44, 0x61, 0x79, 0xf2, 0x02, 0x04, 0x48, 0x6f, 0x75, 0x72, 0xf2, 0x02,
	0x06, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0xf2, 0x02, 0x06, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0xe0, 0x41, 0x01, 0x48, 0x00, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x03,
	0xe0, 0x41, 0x01, 0x48, 0x01, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x22, 0x88, 0x01, 0x0a, 0x0d, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d,
	0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x6e,
	0x75, 0x6d, 0x5f, 0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x69, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x12, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x41, 0x6e,
	0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22,
	0x51, 0x0a, 0x10, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x81, 0x02, 0x0a, 0x07, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x61,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x4d, 0x61, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x4d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x41, 0x6e,
	0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x41,
	0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x22, 0x45, 0x0a, 0x0a, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f,
	0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc7, 0x01,
	0x0a, 0x09, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x6f, 0x77, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x4c, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x70, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x55, 0x70,
	0x70, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x08, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x76,
	0x0a, 0x09, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x69, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4f, 0x92, 0x41,
	0x49, 0x32, 0x17, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x4a, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x3d, 0x64, 0x65, 0x76, 0x3b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x3d, 0x6b, 0x75, 0x62, 0x65, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3d, 0x43, 0x50, 0x55, 0xe0, 0x41, 0x02, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x06, 0x42, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x71, 0x68, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x68, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x22, 0x43, 0x0a, 0x09, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65,
	0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x02, 0x0a, 0x0c, 0x4e, 0x65, 0x77,
	0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x7c, 0x0a, 0x0d, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x56, 0x92, 0x41, 0x50, 0x32, 0x1e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x4a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x3d, 0x64,
	0x65, 0x76, 0x3b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x3d, 0x6b, 0x75, 0x62,
	0x65, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x3d, 0x43, 0x50, 0x55, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x59, 0x92, 0x41, 0x53, 0x32, 0x21, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x6e, 0x67, 0x20, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x4a, 0x2e, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x3d, 0x64, 0x65, 0x76, 0x3b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x3d, 0x6b, 0x75, 0x62, 0x65, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3d, 0x43, 0x50, 0x55, 0xe0, 0x41, 0x02, 0x52, 0x10, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0xad, 0x01, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78,
	0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x68, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x68, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22,
	0x49, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e,
	0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x02, 0x0a, 0x0b, 0x4e,
	0x65, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x7c, 0x0a, 0x0d, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x56, 0x92, 0x41, 0x50, 0x32, 0x1e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x20, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20,
	0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x4a, 0x2e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x3d,
	0x64, 0x65, 0x76, 0x3b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x3d, 0x6b, 0x75,
	0x62, 0x65, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x3d, 0x43, 0x50, 0x55, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x42, 0x19, 0x92, 0x41, 0x13, 0x32, 0x0e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x20, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4a, 0x01, 0x31, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x42, 0x1e, 0x92, 0x41, 0x18, 0x32, 0x13,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x70, 0x72, 0x69, 0x63, 0x65, 0x20, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x4a, 0x01, 0x32, 0xe0, 0x41, 0x02, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x12, 0x20,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x71, 0x68, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71,
	0x68, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x47, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63,
	0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32,
	0xb7, 0x02, 0x0a, 0x19, 0x43, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x50, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x57, 0x0a,
	0x0b, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x2e, 0x2e, 0x63,
	0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61,
	0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f,
	0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2e, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73,
	0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0xd3, 0x04, 0x0a, 0x11, 0x43, 0x6f,
	0x73, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x49, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x12,
	0x55, 0x0a, 0x05, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c,
	0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65,
	0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x07, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c,
	0x79, 0x12, 0x26, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x7a, 0x65,
	0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0d, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e,
	0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f,
	0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x22, 0x00, 0x12, 0x58, 0x0a, 0x06, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x63,
	0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63,
	0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x09,
	0x4e, 0x65, 0x77, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x61, 0x7a, 0x65,
	0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63,
	0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x77, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12,
	0x5e, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x61,
	0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e,
	0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42,
	0xba, 0x01, 0x92, 0x41, 0x8b, 0x01, 0x12, 0x73, 0x0a, 0x0f, 0x43, 0x6f, 0x73, 0x74, 0x20, 0x53,
	0x65, 0x6e, 0x73, 0x65, 0x20, 0x41, 0x50, 0x49, 0x73, 0x22, 0x59, 0x0a, 0x12, 0x43, 0x6f, 0x73,
	0x74, 0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x26, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x63, 0x6f, 0x73,
	0x74, 0x2d, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x1a, 0x1b, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6f,
	0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x40, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61,
	0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x73, 0x65, 0x6e, 0x73,
	0x65, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescOnce sync.Once
	file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescData = file_ipredict_gen_code_ipredict_interface_v1_proto_rawDesc
)

func file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescGZIP() []byte {
	file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescOnce.Do(func() {
		file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescData)
	})
	return file_ipredict_gen_code_ipredict_interface_v1_proto_rawDescData
}

var file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_ipredict_gen_code_ipredict_interface_v1_proto_goTypes = []any{
	(*TraningData)(nil),        // 0: cazelabs.costsense.apis.v1.TraningData
	(*TraningMetadata)(nil),    // 1: cazelabs.costsense.apis.v1.TraningMetadata
	(*PushMetricsRequest)(nil), // 2: cazelabs.costsense.apis.v1.PushMetricsRequest
	(*StatusRequest)(nil),      // 3: cazelabs.costsense.apis.v1.StatusRequest
	(*DeleteTableRequest)(nil), // 4: cazelabs.costsense.apis.v1.DeleteTableRequest
	(*StatusResponse)(nil),     // 5: cazelabs.costsense.apis.v1.StatusResponse
	(*TrendReq)(nil),           // 6: cazelabs.costsense.apis.v1.TrendReq
	(*AnomalyReq)(nil),         // 7: cazelabs.costsense.apis.v1.AnomalyReq
	(*AnomalyReportReq)(nil),   // 8: cazelabs.costsense.apis.v1.AnomalyReportReq
	(*AnomalyReport)(nil),      // 9: cazelabs.costsense.apis.v1.AnomalyReport
	(*AnomalyReportRes)(nil),   // 10: cazelabs.costsense.apis.v1.AnomalyReportRes
	(*Anomaly)(nil),            // 11: cazelabs.costsense.apis.v1.Anomaly
	(*AnomalyRes)(nil),         // 12: cazelabs.costsense.apis.v1.AnomalyRes
	(*TrendData)(nil),          // 13: cazelabs.costsense.apis.v1.TrendData
	(*TrendRes)(nil),           // 14: cazelabs.costsense.apis.v1.TrendRes
	(*BudgetReq)(nil),          // 15: cazelabs.costsense.apis.v1.BudgetReq
	(*Budget)(nil),             // 16: cazelabs.costsense.apis.v1.Budget
	(*BudgetRes)(nil),          // 17: cazelabs.costsense.apis.v1.BudgetRes
	(*NewBudgetReq)(nil),       // 18: cazelabs.costsense.apis.v1.NewBudgetReq
	(*NewBudget)(nil),          // 19: cazelabs.costsense.apis.v1.NewBudget
	(*NewBudgetRes)(nil),       // 20: cazelabs.costsense.apis.v1.NewBudgetRes
	(*NewPriceReq)(nil),        // 21: cazelabs.costsense.apis.v1.NewPriceReq
	(*NewPrice)(nil),           // 22: cazelabs.costsense.apis.v1.NewPrice
	(*NewPriceRes)(nil),        // 23: cazelabs.costsense.apis.v1.NewPriceRes
	(*emptypb.Empty)(nil),      // 24: google.protobuf.Empty
}
var file_ipredict_gen_code_ipredict_interface_v1_proto_depIdxs = []int32{
	1,  // 0: cazelabs.costsense.apis.v1.PushMetricsRequest.meta:type_name -> cazelabs.costsense.apis.v1.TraningMetadata
	0,  // 1: cazelabs.costsense.apis.v1.PushMetricsRequest.data:type_name -> cazelabs.costsense.apis.v1.TraningData
	9,  // 2: cazelabs.costsense.apis.v1.AnomalyReportRes.data:type_name -> cazelabs.costsense.apis.v1.AnomalyReport
	11, // 3: cazelabs.costsense.apis.v1.AnomalyRes.data:type_name -> cazelabs.costsense.apis.v1.Anomaly
	13, // 4: cazelabs.costsense.apis.v1.TrendRes.data:type_name -> cazelabs.costsense.apis.v1.TrendData
	16, // 5: cazelabs.costsense.apis.v1.BudgetRes.data:type_name -> cazelabs.costsense.apis.v1.Budget
	19, // 6: cazelabs.costsense.apis.v1.NewBudgetRes.data:type_name -> cazelabs.costsense.apis.v1.NewBudget
	22, // 7: cazelabs.costsense.apis.v1.NewPriceRes.data:type_name -> cazelabs.costsense.apis.v1.NewPrice
	2,  // 8: cazelabs.costsense.apis.v1.CostSenseIPredictTraining.PushMetrics:input_type -> cazelabs.costsense.apis.v1.PushMetricsRequest
	3,  // 9: cazelabs.costsense.apis.v1.CostSenseIPredictTraining.CurrentStatus:input_type -> cazelabs.costsense.apis.v1.StatusRequest
	4,  // 10: cazelabs.costsense.apis.v1.CostSenseIPredictTraining.DeleteTable:input_type -> cazelabs.costsense.apis.v1.DeleteTableRequest
	6,  // 11: cazelabs.costsense.apis.v1.CostSenseIPredict.Trend:input_type -> cazelabs.costsense.apis.v1.TrendReq
	7,  // 12: cazelabs.costsense.apis.v1.CostSenseIPredict.Anomaly:input_type -> cazelabs.costsense.apis.v1.AnomalyReq
	8,  // 13: cazelabs.costsense.apis.v1.CostSenseIPredict.AnomalyReport:input_type -> cazelabs.costsense.apis.v1.AnomalyReportReq
	15, // 14: cazelabs.costsense.apis.v1.CostSenseIPredict.Budget:input_type -> cazelabs.costsense.apis.v1.BudgetReq
	18, // 15: cazelabs.costsense.apis.v1.CostSenseIPredict.NewBudget:input_type -> cazelabs.costsense.apis.v1.NewBudgetReq
	21, // 16: cazelabs.costsense.apis.v1.CostSenseIPredict.NewPrice:input_type -> cazelabs.costsense.apis.v1.NewPriceReq
	24, // 17: cazelabs.costsense.apis.v1.CostSenseIPredictTraining.PushMetrics:output_type -> google.protobuf.Empty
	5,  // 18: cazelabs.costsense.apis.v1.CostSenseIPredictTraining.CurrentStatus:output_type -> cazelabs.costsense.apis.v1.StatusResponse
	24, // 19: cazelabs.costsense.apis.v1.CostSenseIPredictTraining.DeleteTable:output_type -> google.protobuf.Empty
	14, // 20: cazelabs.costsense.apis.v1.CostSenseIPredict.Trend:output_type -> cazelabs.costsense.apis.v1.TrendRes
	12, // 21: cazelabs.costsense.apis.v1.CostSenseIPredict.Anomaly:output_type -> cazelabs.costsense.apis.v1.AnomalyRes
	10, // 22: cazelabs.costsense.apis.v1.CostSenseIPredict.AnomalyReport:output_type -> cazelabs.costsense.apis.v1.AnomalyReportRes
	17, // 23: cazelabs.costsense.apis.v1.CostSenseIPredict.Budget:output_type -> cazelabs.costsense.apis.v1.BudgetRes
	20, // 24: cazelabs.costsense.apis.v1.CostSenseIPredict.NewBudget:output_type -> cazelabs.costsense.apis.v1.NewBudgetRes
	23, // 25: cazelabs.costsense.apis.v1.CostSenseIPredict.NewPrice:output_type -> cazelabs.costsense.apis.v1.NewPriceRes
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_ipredict_gen_code_ipredict_interface_v1_proto_init() }
func file_ipredict_gen_code_ipredict_interface_v1_proto_init() {
	if File_ipredict_gen_code_ipredict_interface_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TraningData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TraningMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PushMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*TrendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AnomalyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AnomalyReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AnomalyReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AnomalyReportRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Anomaly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AnomalyRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*TrendData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*TrendRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*BudgetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Budget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*BudgetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*NewBudgetReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*NewBudget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*NewBudgetRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*NewPriceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*NewPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*NewPriceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[1].OneofWrappers = []any{}
	file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[6].OneofWrappers = []any{}
	file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[7].OneofWrappers = []any{}
	file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ipredict_gen_code_ipredict_interface_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_ipredict_gen_code_ipredict_interface_v1_proto_goTypes,
		DependencyIndexes: file_ipredict_gen_code_ipredict_interface_v1_proto_depIdxs,
		MessageInfos:      file_ipredict_gen_code_ipredict_interface_v1_proto_msgTypes,
	}.Build()
	File_ipredict_gen_code_ipredict_interface_v1_proto = out.File
	file_ipredict_gen_code_ipredict_interface_v1_proto_rawDesc = nil
	file_ipredict_gen_code_ipredict_interface_v1_proto_goTypes = nil
	file_ipredict_gen_code_ipredict_interface_v1_proto_depIdxs = nil
}
