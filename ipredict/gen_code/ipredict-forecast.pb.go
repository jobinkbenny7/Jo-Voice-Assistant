// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: ipredict/gen_code/ipredict-forecast.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Response message for job status and results
type JobStatusUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`   // Job status: IN_PROGRESS, SUCCESS, FAILED
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Message for job status
	Data    []*Forecasting `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`       // Forecasted data (only if status is SUCCESS)
}

func (x *JobStatusUpdate) Reset() {
	*x = JobStatusUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_forecast_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusUpdate) ProtoMessage() {}

func (x *JobStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_forecast_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusUpdate.ProtoReflect.Descriptor instead.
func (*JobStatusUpdate) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_forecast_proto_rawDescGZIP(), []int{0}
}

func (x *JobStatusUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *JobStatusUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *JobStatusUpdate) GetData() []*Forecasting {
	if x != nil {
		return x.Data
	}
	return nil
}

// Forecasted data point
type Forecasting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime   int64   `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`      // Start timestamp of the forecast interval
	EndTime     int64   `protobuf:"varint,2,opt,name=endTime,proto3" json:"endTime,omitempty"`          // End timestamp of the forecast interval
	Expected    float64 `protobuf:"fixed64,3,opt,name=expected,proto3" json:"expected,omitempty"`       // Expected value
	ExpectedMax float64 `protobuf:"fixed64,4,opt,name=expectedMax,proto3" json:"expectedMax,omitempty"` // Maximum forecasted value
	ExpectedMin float64 `protobuf:"fixed64,5,opt,name=expectedMin,proto3" json:"expectedMin,omitempty"` // Minimum forecasted value
}

func (x *Forecasting) Reset() {
	*x = Forecasting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ipredict_gen_code_ipredict_forecast_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Forecasting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Forecasting) ProtoMessage() {}

func (x *Forecasting) ProtoReflect() protoreflect.Message {
	mi := &file_ipredict_gen_code_ipredict_forecast_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Forecasting.ProtoReflect.Descriptor instead.
func (*Forecasting) Descriptor() ([]byte, []int) {
	return file_ipredict_gen_code_ipredict_forecast_proto_rawDescGZIP(), []int{1}
}

func (x *Forecasting) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Forecasting) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Forecasting) GetExpected() float64 {
	if x != nil {
		return x.Expected
	}
	return 0
}

func (x *Forecasting) GetExpectedMax() float64 {
	if x != nil {
		return x.ExpectedMax
	}
	return 0
}

func (x *Forecasting) GetExpectedMin() float64 {
	if x != nil {
		return x.ExpectedMin
	}
	return 0
}

var File_ipredict_gen_code_ipredict_forecast_proto protoreflect.FileDescriptor

var file_ipredict_gen_code_ipredict_forecast_proto_rawDesc = []byte{
	0x0a, 0x29, 0x69, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x2f, 0x69, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x2d, 0x66, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x63, 0x61, 0x7a,
	0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62,
	0x73, 0x2e, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa5, 0x01, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x65, 0x63, 0x61,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x32, 0x5f, 0x0a,
	0x08, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2b, 0x2e, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e, 0x63, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0xba,
	0x01, 0x92, 0x41, 0x8b, 0x01, 0x12, 0x73, 0x0a, 0x0f, 0x43, 0x6f, 0x73, 0x74, 0x20, 0x53, 0x65,
	0x6e, 0x73, 0x65, 0x20, 0x41, 0x50, 0x49, 0x73, 0x22, 0x59, 0x0a, 0x12, 0x43, 0x6f, 0x73, 0x74,
	0x20, 0x53, 0x65, 0x6e, 0x73, 0x65, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x26,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x74,
	0x2d, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x1a, 0x1b, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x6e, 0x73, 0x65, 0x40, 0x63, 0x61, 0x7a, 0x65, 0x6c, 0x61, 0x62, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x7a,
	0x65, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x74, 0x2d, 0x73, 0x65, 0x6e, 0x73, 0x65,
	0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x67, 0x6f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_ipredict_gen_code_ipredict_forecast_proto_rawDescOnce sync.Once
	file_ipredict_gen_code_ipredict_forecast_proto_rawDescData = file_ipredict_gen_code_ipredict_forecast_proto_rawDesc
)

func file_ipredict_gen_code_ipredict_forecast_proto_rawDescGZIP() []byte {
	file_ipredict_gen_code_ipredict_forecast_proto_rawDescOnce.Do(func() {
		file_ipredict_gen_code_ipredict_forecast_proto_rawDescData = protoimpl.X.CompressGZIP(file_ipredict_gen_code_ipredict_forecast_proto_rawDescData)
	})
	return file_ipredict_gen_code_ipredict_forecast_proto_rawDescData
}

var file_ipredict_gen_code_ipredict_forecast_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ipredict_gen_code_ipredict_forecast_proto_goTypes = []any{
	(*JobStatusUpdate)(nil), // 0: cazelabs.costsense.apis.v1.JobStatusUpdate
	(*Forecasting)(nil),     // 1: cazelabs.costsense.apis.v1.Forecasting
	(*emptypb.Empty)(nil),   // 2: google.protobuf.Empty
}
var file_ipredict_gen_code_ipredict_forecast_proto_depIdxs = []int32{
	1, // 0: cazelabs.costsense.apis.v1.JobStatusUpdate.data:type_name -> cazelabs.costsense.apis.v1.Forecasting
	2, // 1: cazelabs.costsense.apis.v1.forecast.GetJobStatus:input_type -> google.protobuf.Empty
	0, // 2: cazelabs.costsense.apis.v1.forecast.GetJobStatus:output_type -> cazelabs.costsense.apis.v1.JobStatusUpdate
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ipredict_gen_code_ipredict_forecast_proto_init() }
func file_ipredict_gen_code_ipredict_forecast_proto_init() {
	if File_ipredict_gen_code_ipredict_forecast_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ipredict_gen_code_ipredict_forecast_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*JobStatusUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ipredict_gen_code_ipredict_forecast_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Forecasting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ipredict_gen_code_ipredict_forecast_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ipredict_gen_code_ipredict_forecast_proto_goTypes,
		DependencyIndexes: file_ipredict_gen_code_ipredict_forecast_proto_depIdxs,
		MessageInfos:      file_ipredict_gen_code_ipredict_forecast_proto_msgTypes,
	}.Build()
	File_ipredict_gen_code_ipredict_forecast_proto = out.File
	file_ipredict_gen_code_ipredict_forecast_proto_rawDesc = nil
	file_ipredict_gen_code_ipredict_forecast_proto_goTypes = nil
	file_ipredict_gen_code_ipredict_forecast_proto_depIdxs = nil
}
